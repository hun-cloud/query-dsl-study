plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// queryDSL 빌드 옵션
	def generated = 'src/main/generated'

	// queryDSL QClass 파일 생성 위치 지정
	tasks.withType(JavaCompile) {
		options.getGeneratedSourceOutputDirectory().set(file(generated))
	}

	// java source set에 queryDSL QClass 위치 추가
	sourceSets {
		main.java.srcDirs += [ generated ]
	}

	// gradle clean 시 QClass 디렉토리 삭제
	clean {
		delete file(generated)
	}

}

tasks.named('test') {
	useJUnitPlatform()
}
